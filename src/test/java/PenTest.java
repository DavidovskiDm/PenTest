import org.testng.annotations.*;
import static org.testng.Assert.*;

/**
 * Created by Dil on 09.03.2017.
 */
public class PenTest {
    Pen pen;
    private int inkContainerValue;
    private double sizeLetter;
    private String color, word;

    @Parameters({"inkContainerValue","sizeLetter","color"})
    @BeforeMethod
    public void setUp(String inkContainerValue,String  sizeLetter, String color) {
      int a = Integer.parseInt(inkContainerValue);
      double b = Double.parseDouble(sizeLetter);
      pen = new Pen(a, b, color);
       this.inkContainerValue = a;
       this.sizeLetter = b;
       this.color = color;
    }
/*
 @BeforeMethod
    public void setUp() {
        pen = new Pen(500, 1.0, "BLUE");
    }
*/
 /*   @BeforeGroups
    public void isNotWork() {
        pen = new Pen(-500, 1.0, "BLUE");
    }
*/
    @Test
    public void isWorkTest() throws Exception{
      assertTrue(pen.isWork());
    }

    @Test ( groups = "isNotWork")
    public void isNotWorkTest() throws Exception{
        assertFalse(pen.isWork());
    }
    @Parameters({"color"})
    @Test
    public  void getColorTest(String color){

        assertEquals(pen.getColor(), color);
    }

    @Parameters({"word","inkContainerValue","sizeLetter"})
    @Test
    public  void writerTest(String word, String inkContainerValue,String sizeLetter ) throws Exception{
       String partOfWord;
       int length = Integer.parseInt( inkContainerValue);
       double size = Double.parseDouble(sizeLetter);
       double sizeofWord = word.length()*size;
       if (size <= 0)
           assertEquals(pen.write(word), "");
            else

                if (sizeofWord > length) {
                    partOfWord = word.substring(0, (length / (int) size));
                    assertEquals(pen.write(word), partOfWord);
                }
                else {
                    partOfWord = word;
                    assertEquals(pen.write(word), partOfWord);
                }
        }

    @Test (dependsOnMethods = "isNotWorkTest", groups = "isNotWork")
    public  void writerIsNotWorkTest(){

        assertEquals(pen.write(word), "");
    }

}
